@page "/Registro"
@inject IRepositorio repositorio
@inject SweetAlertService swal
@inject ILoginService loginService
@inject NavigationManager navigationManager

<h3>Registro</h3>

<EditForm Model="userInfo" OnValidSubmit="CrearUsuario">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Nombre:</label>
        <div>
            <InputText class="form-control" @bind-Value="userInfo.Nombre" />
            <ValidationMessage For="@(() => userInfo.Nombre)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Apellido:</label>
        <div>
            <InputText class="form-control" @bind-Value="userInfo.Apellido" />
            <ValidationMessage For="@(() => userInfo.Apellido)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Telefono:</label>
        <div>
            <InputText class="form-control" @bind-Value="userInfo.Telefono" />
            <ValidationMessage For="@(() => userInfo.Telefono)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Rol:</label>
        <div>
            <InputText class="form-control" @bind-Value="userInfo.Rol" />
            <ValidationMessage For="@(() => userInfo.Rol)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Password:</label>
        <div>
            <InputText type="password" class="form-control" @bind-Value="userInfo.Contraseña" />
            <ValidationMessage For="@(() => userInfo.Contraseña)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Repetir Password:</label>
        <div>
            <InputText type="password" class="form-control" @bind-Value="userInfo.ContraseñaRepetida" />
            <ValidationMessage For="@(() => userInfo.ContraseñaRepetida)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>
</EditForm>

@code {
    private UserPersonaRegistrarDTO userInfo = new UserPersonaRegistrarDTO(){Rol="participante"};

    public async Task CrearUsuario()
    {
        var respuestaHTTP = await repositorio
                    .Post<UserPersonaRegistrarDTO, TokenDTO>("tsapi/usuarios/registrarconpersona", userInfo);

        if (respuestaHTTP.Error)
        {
            var mensajeError = await respuestaHTTP.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            await loginService.Login(respuestaHTTP.Response!);
            navigationManager.NavigateTo("");
        }
    }
}
