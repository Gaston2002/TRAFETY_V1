// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using TRAFETY.Bd.Contexto;

#nullable disable

namespace TRAFETY.Bd.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230904215928_Inical2")]
    partial class Inical2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Point>("Ubicacion")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.HasIndex("TEmpresaId");

                    b.HasIndex(new[] { "Licencia" }, "EmpresaLicencia_UQ")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.EmpresaGuia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuiaId")
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuiaId");

                    b.HasIndex(new[] { "EmpresaId", "GuiaId" }, "EmpresaContacto_EmpresaId_GuiaId_UQ")
                        .IsUnique();

                    b.ToTable("EmpresaGuias");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.EmpresaStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("TStaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TStaffId");

                    b.HasIndex(new[] { "EmpresaId", "PersonaId" }, "EmpresaStaff_EmpresaId_PersonaId_UQ")
                        .IsUnique();

                    b.ToTable("EmpresaStaffs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Guia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("TGuiaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TGuiaId");

                    b.HasIndex(new[] { "PersonaId" }, "GuiaPersona_UQ")
                        .IsUnique();

                    b.ToTable("Guias");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.GuiaActividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuiaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex(new[] { "GuiaId", "ActividadId" }, "GuiaActividad_GuiaId_ActividadId_UQ")
                        .IsUnique();

                    b.ToTable("GuiaActividades");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.GuiaDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuiaId")
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id");

                    b.HasIndex("GuiaId");

                    b.HasIndex(new[] { "NomDoc" }, "GuiaDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("GuiaDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.GuiaFicha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuiaId")
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuiaId");

                    b.HasIndex(new[] { "Codigo" }, "GuiaFicha_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("GuiaFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PersonaId" }, "ParticipantePersona_UQ")
                        .IsUnique();

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.ParticipanteContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("TContactoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TContactoId");

                    b.HasIndex(new[] { "ParticipanteId", "PersonaId" }, "ParticipanteContacto_ParticipanteId_PersonaId_UQ")
                        .IsUnique();

                    b.ToTable("ParticipanteContactos");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.ParticipanteDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex(new[] { "NomDoc" }, "ParticipanteDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("ParticipanteDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.ParticipanteFicha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex(new[] { "Codigo" }, "ParticipanteFicha_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("ParticipanteFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Point>("Ubicacion")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "PersonaEmail_UQ")
                        .IsUnique();

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("ActividadPadreId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActividadPadreId");

                    b.HasIndex(new[] { "Codigo" }, "Actividad_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.Salida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("EmpresaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuiaId")
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<Point>("PuntoLlegada")
                        .HasColumnType("geography");

                    b.Property<Point>("PuntoSalida")
                        .HasColumnType("geography");

                    b.Property<int>("TOrganizacionId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Point>("Ubicacion")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("GuiaId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TOrganizacionId");

                    b.HasIndex(new[] { "Codigo" }, "OrgSalida_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("Salidas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaId");

                    b.HasIndex(new[] { "NomDoc" }, "SalidaDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("SalidaDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaGuia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuiaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuiaId");

                    b.HasIndex(new[] { "SalidaId", "GuiaId" }, "SalidaGuia_SalidaId_GuiaId_UQ")
                        .IsUnique();

                    b.ToTable("SalidaGuias");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("FechaRegreso")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("FechaSalida")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaId");

                    b.ToTable("SalidaProgramadas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("SalidaProgramadaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaProgramadaId");

                    b.HasIndex(new[] { "NomDoc" }, "SalidaProgramadaDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("SalidaProgramadaDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaGuiaDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("SalidaGuiaId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaProgramadaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaGuiaId");

                    b.HasIndex("SalidaProgramadaId");

                    b.HasIndex(new[] { "NomDoc" }, "SalidaProgramadaGuiaDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("SalidaProgramadaGuiaDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaGuiaFicha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalidaGuiaId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaProgramadaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaGuiaId");

                    b.HasIndex("SalidaProgramadaId");

                    b.HasIndex(new[] { "Codigo" }, "SalidaProgramadaGuiaFicha_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("SalidaProgramadaGuiaFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaProgramadaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex(new[] { "SalidaProgramadaId", "ParticipanteId" }, "SalidaParticipante_SalidaProgramadaId_ParticipanteId_UQ")
                        .IsUnique();

                    b.ToTable("SalidaProgramadaParticipantes");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipanteDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("SalidaProgramadaParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("SalidaProgramadaParticipanteId");

                    b.HasIndex(new[] { "NomDoc" }, "SalidaProgramadaParticipanteDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("SalidaProgramadaParticipanteDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipanteFicha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaProgramadaParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("SalidaProgramadaParticipanteId");

                    b.HasIndex(new[] { "Codigo" }, "SalidaProgramadaParticipanteFicha_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("SalidaProgramadaParticipanteFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuiaId")
                        .HasColumnType("int");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalidaId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaProgramadaId")
                        .HasColumnType("int");

                    b.Property<int>("TStaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuiaId");

                    b.HasIndex("SalidaId");

                    b.HasIndex("TStaffId");

                    b.HasIndex(new[] { "SalidaProgramadaId", "GuiaId" }, "SalidaStaff_SalidaProgramadaId_GuiaId_UQ")
                        .IsUnique();

                    b.ToTable("SalidaStaffs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaffDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDoc")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("SalidaStaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaStaffId");

                    b.HasIndex(new[] { "NomDoc" }, "SalidaStaffDoc_NomDoc_UQ")
                        .IsUnique();

                    b.ToTable("SalidaStaffDocs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaffFicha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalidaStaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalidaStaffId");

                    b.HasIndex(new[] { "Codigo" }, "SalidaStaffFicha_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("SalidaStaffFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "TContacto_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("TContactos");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "TEmpresa_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("TEmpresas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TGuia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "TGuia_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("TGuias");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TOrganizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "TOrganizacion_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("TOrganizaciones");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EstadoRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Codigo" }, "TStaff_Codigo_UQ")
                        .IsUnique();

                    b.ToTable("TStaffs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Usuario.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonaId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TRAFETY.Bd.Usuario.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TRAFETY.Bd.Usuario.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Usuario.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TRAFETY.Bd.Usuario.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.Empresa", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.TTipo.TEmpresa", "TEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("TEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TEmpresa");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.EmpresaGuia", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Empresas.Empresa", "Empresa")
                        .WithMany("EmpresaGuias")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany("EmpresaGuias")
                        .HasForeignKey("GuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Guia");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.EmpresaStaff", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Empresas.Empresa", "Empresa")
                        .WithMany("EmpresaStaff")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Personas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.TTipo.TStaff", "TStaff")
                        .WithMany("EmpresaStaffs")
                        .HasForeignKey("TStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Persona");

                    b.Navigation("TStaff");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Guia", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.TTipo.TGuia", "TGuia")
                        .WithMany("Guias")
                        .HasForeignKey("TGuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TGuia");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.GuiaActividad", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany("GuiaActividades")
                        .HasForeignKey("GuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Guia");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.GuiaDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany("GuiaDocs")
                        .HasForeignKey("GuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guia");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.GuiaFicha", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany("GuiaFichas")
                        .HasForeignKey("GuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guia");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Participante", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.ParticipanteContacto", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Participante", "Participante")
                        .WithMany("ParticipanteContactos")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Personas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.TTipo.TContacto", "TContacto")
                        .WithMany("ParticipanteContactos")
                        .HasForeignKey("TContactoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Participante");

                    b.Navigation("Persona");

                    b.Navigation("TContacto");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.ParticipanteDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Participante", "Participante")
                        .WithMany("ParticipanteDocs")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.ParticipanteFicha", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Participante", "Participante")
                        .WithMany("ParticipanteFichas")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.Actividad", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Actividad", "ActividadPadre")
                        .WithMany()
                        .HasForeignKey("ActividadPadreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActividadPadre");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.Salida", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Actividad", "Actividad")
                        .WithMany("Salidas")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Empresas.Empresa", "Empresa")
                        .WithMany("Salidas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany("Salidas")
                        .HasForeignKey("GuiaId");

                    b.HasOne("TRAFETY.Bd.Entity.Personas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.TTipo.TOrganizacion", "TOrganizacion")
                        .WithMany("Salidas")
                        .HasForeignKey("TOrganizacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Empresa");

                    b.Navigation("Guia");

                    b.Navigation("Persona");

                    b.Navigation("TOrganizacion");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Salida", "Salida")
                        .WithMany("SalidaDocs")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaGuia", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany("SalidaGuias")
                        .HasForeignKey("GuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Salida", "Salida")
                        .WithMany("SalidaGuias")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guia");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Salida", "Salida")
                        .WithMany("SalidaProgramadas")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", "SalidaProgramada")
                        .WithMany("SalidaProgramadaDocs")
                        .HasForeignKey("SalidaProgramadaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaProgramada");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaGuiaDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaGuia", "SalidaGuia")
                        .WithMany()
                        .HasForeignKey("SalidaGuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", "SalidaProgramada")
                        .WithMany("SalidaProgramadaGuiaDocs")
                        .HasForeignKey("SalidaProgramadaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaGuia");

                    b.Navigation("SalidaProgramada");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaGuiaFicha", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaGuia", "SalidaGuia")
                        .WithMany()
                        .HasForeignKey("SalidaGuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", "SalidaProgramada")
                        .WithMany("SalidaProgramadaGuiaFichas")
                        .HasForeignKey("SalidaProgramadaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaGuia");

                    b.Navigation("SalidaProgramada");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipante", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Participante", "Participante")
                        .WithMany("SalidaProgramadaParticipantes")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", "SalidaProgramada")
                        .WithMany("SalidaProgramadaParticipantes")
                        .HasForeignKey("SalidaProgramadaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Participante");

                    b.Navigation("SalidaProgramada");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipanteDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Participante", null)
                        .WithMany("SalidaProgramadaParticipanteDocs")
                        .HasForeignKey("ParticipanteId");

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipante", "SalidaProgramadaParticipante")
                        .WithMany("SalidaProgramadaParticipanteDocs")
                        .HasForeignKey("SalidaProgramadaParticipanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaProgramadaParticipante");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipanteFicha", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Participante", null)
                        .WithMany("SalidaProgramadaParticipanteFichas")
                        .HasForeignKey("ParticipanteId");

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipante", "SalidaProgramadaParticipante")
                        .WithMany("SalidaProgramadaParticipanteFichas")
                        .HasForeignKey("SalidaProgramadaParticipanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaProgramadaParticipante");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaff", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Guia", "Guia")
                        .WithMany()
                        .HasForeignKey("GuiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.Salida", null)
                        .WithMany("SalidaStaffs")
                        .HasForeignKey("SalidaId");

                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", "SalidaProgramada")
                        .WithMany()
                        .HasForeignKey("SalidaProgramadaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TRAFETY.Bd.Entity.TTipo.TStaff", "TStaff")
                        .WithMany("SalidaStaffs")
                        .HasForeignKey("TStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guia");

                    b.Navigation("SalidaProgramada");

                    b.Navigation("TStaff");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaffDoc", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaStaff", "SalidaStaff")
                        .WithMany("SalidaStaffDocs")
                        .HasForeignKey("SalidaStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaStaff");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaffFicha", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Salidas.SalidaStaff", "SalidaStaff")
                        .WithMany("SalidaStaffFichas")
                        .HasForeignKey("SalidaStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SalidaStaff");
                });

            modelBuilder.Entity("TRAFETY.Bd.Usuario.User", b =>
                {
                    b.HasOne("TRAFETY.Bd.Entity.Personas.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Empresas.Empresa", b =>
                {
                    b.Navigation("EmpresaGuias");

                    b.Navigation("EmpresaStaff");

                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Guia", b =>
                {
                    b.Navigation("EmpresaGuias");

                    b.Navigation("GuiaActividades");

                    b.Navigation("GuiaDocs");

                    b.Navigation("GuiaFichas");

                    b.Navigation("SalidaGuias");

                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Personas.Participante", b =>
                {
                    b.Navigation("ParticipanteContactos");

                    b.Navigation("ParticipanteDocs");

                    b.Navigation("ParticipanteFichas");

                    b.Navigation("SalidaProgramadaParticipanteDocs");

                    b.Navigation("SalidaProgramadaParticipanteFichas");

                    b.Navigation("SalidaProgramadaParticipantes");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.Actividad", b =>
                {
                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.Salida", b =>
                {
                    b.Navigation("SalidaDocs");

                    b.Navigation("SalidaGuias");

                    b.Navigation("SalidaProgramadas");

                    b.Navigation("SalidaStaffs");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramada", b =>
                {
                    b.Navigation("SalidaProgramadaDocs");

                    b.Navigation("SalidaProgramadaGuiaDocs");

                    b.Navigation("SalidaProgramadaGuiaFichas");

                    b.Navigation("SalidaProgramadaParticipantes");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaProgramadaParticipante", b =>
                {
                    b.Navigation("SalidaProgramadaParticipanteDocs");

                    b.Navigation("SalidaProgramadaParticipanteFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.Salidas.SalidaStaff", b =>
                {
                    b.Navigation("SalidaStaffDocs");

                    b.Navigation("SalidaStaffFichas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TContacto", b =>
                {
                    b.Navigation("ParticipanteContactos");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TEmpresa", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TGuia", b =>
                {
                    b.Navigation("Guias");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TOrganizacion", b =>
                {
                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("TRAFETY.Bd.Entity.TTipo.TStaff", b =>
                {
                    b.Navigation("EmpresaStaffs");

                    b.Navigation("SalidaStaffs");
                });
#pragma warning restore 612, 618
        }
    }
}
